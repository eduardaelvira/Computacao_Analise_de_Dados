#   if(j %in% groups) {
#     groups[count] <- j
#     count <- count + 1
#     print(count)
#   }
# }
}
#Quantos grupos diferentes existem?
count <- 1
groups <- vector(mode = "character", length = 1000)
arr <- genomas$Groups[c(1:10)]
arr
for(i in arr) {
arr2 <- unlist(strsplit(i, ";"))
for(j in arr2) {
print(j)
if(j %in% groups) {
groups[count] <- j
count <- count + 1
print(count)
}
}
}
for(i in c(1:4)) {
groups[i] <- "A"
}
print(j %in% groups)
#Quantos grupos diferentes existem?
count <- 1
groups <- vector(mode = "character", length = 1000)
arr <- genomas$Groups[c(1:10)]
arr
for(i in arr) {
arr2 <- unlist(strsplit(i, ";"))
for(j in arr2) {
print(j %in% groups)
# if(j %in% groups) {
#   groups[count] <- j
#   count <- count + 1
#   print(count)
# }
}
}
#Quantos grupos diferentes existem?
count <- 1
groups <- vector(mode = "character", length = 1000)
for(i in genomas$Groups[c(1:10)]) {
for(j in unlist(strsplit(i, ";"))) {
if(!(j %in% groups)) {
groups[count] <- j
count <- count + 1
print(count)
}
}
}
groups
groups <- vector(mode = "character", length = 1000)
for(i in genomas$Groups) {
for(j in unlist(strsplit(i, ";"))) {
if(!(j %in% groups)) {
groups[count] <- j
count <- count + 1
}
}
}
# Carregue o arquivo genomes.csv numa variável chamada genomas através do seguinte comando:
# genomas <- as.data.frame(read.csv("https://www.dropbox.com/s/vgh6qk395ck86fp/genomes.csv?dl=1")).
# De posse desse dado, responda as perguntas abaixo.
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
genomas <- as.data.frame(read.csv("genomes.csv"))
#Quantos grupos diferentes existem?
count <- 1
groups <- vector(mode = "character", length = 1000)
for(i in genomas$Groups) {
for(j in unlist(strsplit(i, ";"))) {
if(!(j %in% groups)) {
groups[count] <- j
count <- count + 1
}
}
}
as.factor(genomas$Groups)
#Quantos grupos diferentes existem?
as.factor(genomas$Groups)
#Quantos grupos diferentes existem?
as.factor(genomas$Groups).levels
#Quantos grupos diferentes existem?
levels(as.factor(genomas$Groups))
#Quantos grupos diferentes existem?
length(levels(as.factor(genomas$Groups)))
# Carregue o arquivo cancer_stats.csv numa variável chamada cancer_stats através
# do seguinte comando:
# cancer_stats <- as.data.frame(read.csv("https://www.dropbox.com/s/g97bsxeuu0tajkj/cancer_stats.csv?dl=1")).
# De posse desse dado, responda as perguntas abaixo.
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
cancer_stats <- as.data.frame(read.csv("cancer_stats.csv")).
cancer_stats <- as.data.frame(read.csv("cancer_stats.csv"))
View(cancer_stats)
# Para qual local do câncer (site) do sistema digestivo (Digestive System) existem mais casos femininos do que masculinos? *
cancer_stats[cancer_stats$Class == "Digestive System"]
# Para qual local do câncer (site) do sistema digestivo (Digestive System) existem mais casos femininos do que masculinos? *
cancer_stats[cancer_stats$Class == "Digestive System",]
# Para qual local do câncer (site) do sistema digestivo (Digestive System) existem mais casos femininos do que masculinos? *
aux <- cancer_stats[cancer_stats$Class == "Digestive System",]
aux[aux$Female.Cases > aux$Male.Cases]
aux$Female.Cases > aux$Male.Cases
aux[aux$Female.Cases > aux$Male.Cases]
aux$Female.Cases > aux$Male.Cases
View(aux)
aux[aux$Female.Cases > aux$Male.Cases,]
aux[aux$Female.Cases > aux$Male.Cases,]$Class
aux[aux$Female.Cases > aux$Male.Cases,]$Site
# Qual local do câncer tem a melhor taxa de sobrevivência para os homens? *
escore_padronizado <- function(v) {
return((v - mean(v))/sd(v))
}
# Qual local do câncer tem a melhor taxa de sobrevivência para os homens? *
score_padronizado <- function(v) {
return((v - mean(v))/sd(v))
}
?lapply
?pull
?select
str(cancer_stats)
cancer_stats[c("Class","Male.Cases","Male.Deaths")]
cancer_stats[c("Site","Male.Cases","Male.Deaths")]
cancer_stats[c("Site","Male.Cases","Male.Deaths") & !is.na(cancer_stats$Male.Cases) & !is.na(cancer_stats$Male.Deaths),]
aux <- aux[!is.na(aux$Male.Cases) & !is.na(aux$Male.Deaths),]
aux <- cancer_stats[c("Site","Male.Cases","Male.Deaths"),]
aux <- aux[!is.na(aux$Male.Cases) & !is.na(aux$Male.Deaths),]
aux
aux <- aux[!is.na(aux$Male.Cases) | !is.na(aux$Male.Deaths),]
aux
aux <- cancer_stats[c("Site","Male.Cases","Male.Deaths"),]
aux
aux <- cancer_stats[c(1,3,5),]
aux
aux <- cancer_stats[,c("Site","Male.Cases","Male.Deaths")]
aux
str(aux
)
str(aux)
aux
aux <- aux[!is.na(aux$Male.Cases) | !is.na(aux$Male.Deaths)]
aux <- aux[!is.na(aux$Male.Cases) | !is.na(aux$Male.Deaths),]
aux
aux <- cancer_stats[,c("Site","Male.Cases","Male.Deaths")]
length(aux)
dim(aux)
aux <- aux[!is.na(aux$Male.Cases) | !is.na(aux$Male.Deaths),]
dim(aux)
aux[,1]
aux <- cancer_stats[,c("Site","Male.Cases","Male.Deaths")]
aux <- aux[!is.na(aux$Male.Cases) | !is.na(aux$Male.Deaths),]
aux[,1]
aux[,2:3]
score_padronizado(aux[,2:3])
score_padronizado(as.vector(aux[,2:3]))
as.vector(aux[,2:3])
as.vector(aux[1,2:3])
aux[1,2:3]
score_padronizado(aux[1,2:3])
score_padronizado(c(aux[1,2],aux[1,3]))
score_padronizado(c(aux[,2],aux[,3]))
length(score_padronizado(c(aux[,2],aux[,3])))
aux[,2]
length(score_padronizado()
c(aux[,2],aux[,3]))
c(aux[,2],aux[,3]))
c(aux[,2],aux[,3])
View(aux)
list(aux[,2],aux[,3])
length(list(aux[,2],aux[,3]))
dim(list(aux[,2],aux[,3]))]
dim(list(aux[,2],aux[,3]))
aux[1,1]
aux[2,1]
aux[1,2]
aux[1,3]
aux <- cancer_stats[,c("Site","Male.Cases","Male.Deaths")]
aux <- aux[!is.na(aux$Male.Cases) | !is.na(aux$Male.Deaths),]
for(i in c(1:length(aux$Male.Cases))) {
aux$score[i] <- score_padronizado(c(aux[i,2],aux[i,3]))
}
score_padronizado(c(12550,2220))
score_padronizado(aux$Male.Cases)
score_padronizado(aux$Male.Cases)
score_padronizado(aux$Male.Deaths)
score_padronizado(aux$Male.Cases)+score_padronizado(aux$Male.Deaths)
(score_padronizado(aux$Male.Cases)+score_padronizado(aux$Male.Deaths))/2
which.max((score_padronizado(aux$Male.Cases)+score_padronizado(aux$Male.Deaths))/2)
aux[which.max((score_padronizado(aux$Male.Cases)+score_padronizado(aux$Male.Deaths))/2),1]
aux[which.min((score_padronizado(aux$Male.Cases)+score_padronizado(aux$Male.Deaths))/2),1]
(score_padronizado(aux$Male.Cases)+score_padronizado(aux$Male.Deaths))/2
aux$score <- (score_padronizado(aux$Male.Cases)+score_padronizado(aux$Male.Deaths))/2
aux[aux$Site == "Eosophagus" & aux$Site == "Prostate" & aux$Site == "heart" & aux$Site == "Testis"]
aux[aux$Site == "Eosophagus" | aux$Site == "Prostate" | aux$Site == "heart" | aux$Site == "Testis"]
aux[aux$Site == "Eosophagus" | aux$Site == "Prostate" | aux$Site == "heart" | aux$Site == "Testis",]
min(
aux[
aux$Site == "Eosophagus" |
aux$Site == "Prostate" |
aux$Site == "heart" |
aux$Site == "Testis",
]
)
min(
aux[
aux$Site == "Eosophagus" |
aux$Site == "Prostate" |
aux$Site == "heart" |
aux$Site == "Testis",
]$score
)
which.max(
aux[
aux$Site == "Eosophagus" |
aux$Site == "Prostate" |
aux$Site == "heart" |
aux$Site == "Testis",
]$score
)
which.max(
aux[
aux$Site == "Eosophagus" |
aux$Site == "Prostate" |
aux$Site == "heart" |
aux$Site == "Testis",
]$score
)$Site
aux[which.max(
aux[
aux$Site == "Eosophagus" |
aux$Site == "Prostate" |
aux$Site == "heart" |
aux$Site == "Testis",
]$score
)]$Site
aux[which.max(
aux[
aux$Site == "Eosophagus" |
aux$Site == "Prostate" |
aux$Site == "heart" |
aux$Site == "Testis",
]$Score
),]$Site
aux[which.max(
aux[
aux$Site == "Eosophagus" |
aux$Site == "Prostate" |
aux$Site == "heart" |
aux$Site == "Testis",
]$Score
),]$Site
aux$Site[which.max(
aux[
aux$Site == "Eosophagus" |
aux$Site == "Prostate" |
aux$Site == "heart" |
aux$Site == "Testis",
]$Score
)]
aux$Site
aux[
aux$Site == "Eosophagus" |
aux$Site == "Prostate" |
aux$Site == "heart" |
aux$Site == "Testis",
]
aux <- aux[
aux$Site == "Eosophagus" |
aux$Site == "Prostate" |
aux$Site == "heart" |
aux$Site == "Testis",
]
aux[which.max(aux$score),]
aux[which.max(aux$score),]$Site
# Qual local do câncer tem a melhor taxa de sobrevivência para os homens? *
score_padronizado <- function(v) {
return((v - mean(v))/sd(v))
}
aux <- cancer_stats[,c("Site","Male.Cases","Male.Deaths")]
# Qual local do câncer tem a melhor taxa de sobrevivência para os homens? *
score_padronizado <- function(v) {
return((v - mean(v))/sd(v))
}
aux <- cancer_stats[,c("Site","Male.Cases","Male.Deaths")]
aux <- aux[!is.na(aux$Male.Cases) | !is.na(aux$Male.Deaths),]
aux$score <- (score_padronizado(aux$Male.Cases)+score_padronizado(aux$Male.Deaths))/2
aux <- aux[
aux$Site == "Eosophagus" |
aux$Site == "Prostate" |
aux$Site == "heart" |
aux$Site == "Testis",
]
aux[which.max(aux$score),]$Site
aux <- cancer_stats[,c("Site","Male.Cases","Male.Deaths")]
(score_padronizado(aux$Male.Cases)+score_padronizado(aux$Male.Deaths))/2
aux <- aux[!is.na(aux$Male.Cases) | !is.na(aux$Male.Deaths),]
(score_padronizado(aux$Male.Cases)+score_padronizado(aux$Male.Deaths))/2
ave(score_padronizado(aux$Male.Cases)+score_padronizado(aux$Male.Deaths))
aux[which.max(aux[
aux$Site == "Eosophagus" |
aux$Site == "Prostate" |
aux$Site == "heart" |
aux$Site == "Testis",
]$score),]$Site
aux <- cancer_stats[,c("Site","Male.Cases","Male.Deaths")]
aux <- aux[!is.na(aux$Male.Cases) | !is.na(aux$Male.Deaths),]
aux$score <- (score_padronizado(aux$Male.Cases)+score_padronizado(aux$Male.Deaths))/2
aux[which.max(aux[
aux$Site == "Eosophagus" |
aux$Site == "Prostate" |
aux$Site == "heart" |
aux$Site == "Testis",
]$score),]$Site
aux <- cancer_stats[,c("Site","Male.Cases","Male.Deaths")]
aux <- aux[!is.na(aux$Male.Cases) | !is.na(aux$Male.Deaths),]
aux$score <- (score_padronizado(aux$Male.Cases)+score_padronizado(aux$Male.Deaths))/2
aux <- aux[
aux$Site == "Eosophagus" |
aux$Site == "Prostate" |
aux$Site == "heart" |
aux$Site == "Testis",
]
aux[which.max(aux$score),]$Site
# Qual local do câncer tem a melhor taxa de sobrevivência para os homens? *
score_padronizado <- function(v) {
return((v - mean(v))/sd(v))
}
aux <- cancer_stats[,c("Site","Female.Cases","Female.Deaths")]
aux <- aux[!is.na(aux$Female.Cases) | !is.na(aux$Female.Deaths),]
aux$score <- (score_padronizado(aux$Female.Cases)+score_padronizado(aux$Female.Deaths))/2
aux <- aux[
aux$Site == "pancreas" |
aux$Site == "thyroid" |
aux$Site == "ureter" |
aux$Site == "breast",
]
aux[which.min(aux$score),]$Site
#Qual foi o valor mínimo de ozônio no mês de maio ? *
airquality_maio <- airquality[airquality$Month == 5,]
aux <- airquality_maio[!is.na(airquality_maio$Ozone),]
min(aux$Ozone)
#Extraia o subconjunto do data frame em que os valores de Ozônio estão acima de
# 25 e os valores da temperatura (Temp) estão abaixo de 90. Qual é a média do
# Solar.R nesse subconjunto? *
aux <- airquality[airquality$Ozone > 25 & airquality$Temp < 90,]
aux <- aux[!is.na(aux$Solar.R),]
mean(aux$Solar.R)
# Qual a quantidade de casos completos no dataset airquality ? Ou seja,
# a quantidade de observação (linhas) sem NAs. *
nrow(airquality[complete.cases(airquality), ])
# Carregue o arquivo genomes.csv numa variável chamada genomas através do seguinte comando:
# genomas <- as.data.frame(read.csv("https://www.dropbox.com/s/vgh6qk395ck86fp/genomes.csv?dl=1")).
# De posse desse dado, responda as perguntas abaixo.
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
genomas <- as.data.frame(read.csv("genomes.csv"))
# Selecione os organismos com mais de 40 cromossomos. *
genomas[genomas$Chromosomes > 40,]$Organism
#Selecione os organismos que contém plasmídeos e também possui mais de um cromossomo. *
aux <- genomas[genomas$Plasmids > 0 & genomas$Chromosomes > 1,]
aux[
aux$Organism == "Yangia" |
aux$Organism ==  "Vibrio tubiashii" |
aux$Organism ==  "Acidipila" |
aux$Organism ==  "Vibrio scophthalmi" |
aux$Organism ==  "Acidimicrobiales bacterium",
]$Organism
# Selecione os organismos com mais de 40 cromossomos. *
genomas[genomas$Chromosomes > 40,]$Organism
# Selecione os organismos com mais de 40 cromossomos. *
aux <- genomas[genomas$Chromosomes > 40,]$Organism
aux[
aux$Organism == "Carassius auratus" |
aux$Organism ==  "Thymallus thymallus" |
aux$Organism ==  "Abisko virus" |
aux$Organism ==  "Absidia repens" |
aux$Organism ==  "Abutilon Brazil virus",
]$Organism
# Selecione os organismos com mais de 40 cromossomos. *
aux <- genomas[genomas$Chromosomes > 40,]
aux[
aux$Organism == "Carassius auratus" |
aux$Organism ==  "Thymallus thymallus" |
aux$Organism ==  "Abisko virus" |
aux$Organism ==  "Absidia repens" |
aux$Organism ==  "Abutilon Brazil virus",
]$Organism
#Selecione os organismos que contém plasmídeos e também possui mais de um cromossomo. *
aux <- genomas[genomas$Plasmids > 0 & genomas$Chromosomes > 1,]
aux[
aux$Organism == "Yangia" |
aux$Organism ==  "Vibrio tubiashii" |
aux$Organism ==  "Acidipila" |
aux$Organism ==  "Vibrio scophthalmi" |
aux$Organism ==  "Acidimicrobiales bacterium",
]$Organism
#Quantos grupos diferentes existem?
length(levels(as.factor(genomas$Groups)))
# Carregue o arquivo cancer_stats.csv numa variável chamada cancer_stats através
# do seguinte comando:
# cancer_stats <- as.data.frame(read.csv("https://www.dropbox.com/s/g97bsxeuu0tajkj/cancer_stats.csv?dl=1")).
# De posse desse dado, responda as perguntas abaixo.
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
cancer_stats <- as.data.frame(read.csv("cancer_stats.csv"))
# Para qual local do câncer (site) do sistema digestivo (Digestive System) existem mais casos femininos do que masculinos? *
aux <- cancer_stats[cancer_stats$Class == "Digestive System",]
aux[aux$Female.Cases > aux$Male.Cases,]$Site
# Qual local do câncer tem a melhor taxa de sobrevivência para os homens? *
score_padronizado <- function(v) {
return((v - mean(v))/sd(v))
}
aux <- cancer_stats[,c("Site","Male.Cases","Male.Deaths")]
aux <- aux[!is.na(aux$Male.Cases) | !is.na(aux$Male.Deaths),]
aux$score <- (score_padronizado(aux$Male.Cases)+score_padronizado(aux$Male.Deaths))/2
aux <- aux[
aux$Site == "Eosophagus" |
aux$Site == "Prostate" |
aux$Site == "heart" |
aux$Site == "Testis",
]
aux[which.max(aux$score),]$Site
# Qual local do câncer tem a melhor taxa de sobrevivência para os homens? *
score_padronizado <- function(v) {
return((v - mean(v))/sd(v))
}
aux <- cancer_stats[,c("Site","Female.Cases","Female.Deaths")]
aux <- aux[!is.na(aux$Female.Cases) | !is.na(aux$Female.Deaths),]
aux$score <- (score_padronizado(aux$Female.Cases)+score_padronizado(aux$Female.Deaths))/2
aux <- aux[
aux$Site == "pancreas" |
aux$Site == "thyroid" |
aux$Site == "ureter" |
aux$Site == "breast",
]
aux[which.min(aux$score),]$Site
#Qual foi o valor mínimo de ozônio no mês de maio ? *
airquality_maio <- airquality[airquality$Month == 5,]
aux <- airquality_maio[!is.na(airquality_maio$Ozone),]
min(aux$Ozone)
#Extraia o subconjunto do data frame em que os valores de Ozônio estão acima de
# 25 e os valores da temperatura (Temp) estão abaixo de 90. Qual é a média do
# Solar.R nesse subconjunto? *
aux <- airquality[airquality$Ozone > 25 & airquality$Temp < 90,]
aux <- aux[!is.na(aux$Solar.R),]
mean(aux$Solar.R)
# Qual a quantidade de casos completos no dataset airquality ? Ou seja,
# a quantidade de observação (linhas) sem NAs. *
nrow(airquality[complete.cases(airquality), ])
# Carregue o arquivo genomes.csv numa variável chamada genomas através do seguinte comando:
# genomas <- as.data.frame(read.csv("https://www.dropbox.com/s/vgh6qk395ck86fp/genomes.csv?dl=1")).
# De posse desse dado, responda as perguntas abaixo.
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
genomas <- as.data.frame(read.csv("genomes.csv"))
# Selecione os organismos com mais de 40 cromossomos. *
aux <- genomas[genomas$Chromosomes > 40,]
aux[
aux$Organism == "Carassius auratus" |
aux$Organism ==  "Thymallus thymallus" |
aux$Organism ==  "Abisko virus" |
aux$Organism ==  "Absidia repens" |
aux$Organism ==  "Abutilon Brazil virus",
]$Organism
#Selecione os organismos que contém plasmídeos e também possui mais de um cromossomo. *
aux <- genomas[genomas$Plasmids > 0 & genomas$Chromosomes > 1,]
aux[
aux$Organism == "Yangia" |
aux$Organism ==  "Vibrio tubiashii" |
aux$Organism ==  "Acidipila" |
aux$Organism ==  "Vibrio scophthalmi" |
aux$Organism ==  "Acidimicrobiales bacterium",
]$Organism
#Quantos grupos diferentes existem?
length(levels(as.factor(genomas$Groups)))
# Carregue o arquivo cancer_stats.csv numa variável chamada cancer_stats através
# do seguinte comando:
# cancer_stats <- as.data.frame(read.csv("https://www.dropbox.com/s/g97bsxeuu0tajkj/cancer_stats.csv?dl=1")).
# De posse desse dado, responda as perguntas abaixo.
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
cancer_stats <- as.data.frame(read.csv("cancer_stats.csv"))
# Para qual local do câncer (site) do sistema digestivo (Digestive System) existem mais casos femininos do que masculinos? *
aux <- cancer_stats[cancer_stats$Class == "Digestive System",]
aux[aux$Female.Cases > aux$Male.Cases,]$Site
# Qual local do câncer tem a melhor taxa de sobrevivência para os homens? *
score_padronizado <- function(v) {
return((v - mean(v))/sd(v))
}
aux <- cancer_stats[,c("Site","Male.Cases","Male.Deaths")]
aux <- aux[!is.na(aux$Male.Cases) | !is.na(aux$Male.Deaths),]
aux$score <- (score_padronizado(aux$Male.Cases)+score_padronizado(aux$Male.Deaths))/2
aux <- aux[
aux$Site == "Eosophagus" |
aux$Site == "Prostate" |
aux$Site == "heart" |
aux$Site == "Testis",
]
aux[which.max(aux$score),]$Site
# Qual local do câncer tem a melhor taxa de sobrevivência para os homens? *
score_padronizado <- function(v) {
return((v - mean(v))/sd(v))
}
aux <- cancer_stats[,c("Site","Female.Cases","Female.Deaths")]
aux <- aux[!is.na(aux$Female.Cases) | !is.na(aux$Female.Deaths),]
aux$score <- (score_padronizado(aux$Female.Cases)+score_padronizado(aux$Female.Deaths))/2
aux <- aux[
aux$Site == "pancreas" |
aux$Site == "thyroid" |
aux$Site == "ureter" |
aux$Site == "breast",
]
aux[which.min(aux$score),]$Site
